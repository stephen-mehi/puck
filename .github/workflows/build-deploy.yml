name: build and deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4 # Checkout the repository code
    
    - name: Setup .NET Core SDK  # Set up .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Restore dependencies  # Restore project dependencies
      run: dotnet restore

    - name: Build application  # Build the ASP.NET Core application
      run: dotnet build --configuration Release

    - name: Run tests  # Run tests (if applicable)
      run: dotnet test
      
    - name: Build the Docker image
      run: |
        $tag = "puck:$(& git rev-parse --short HEAD)-$(Get-Date -Format 'yyyyMMddHHmmss')"
        Write-Output $tag
        docker build -t $tag .
        
  docker:
    runs-on: self-hosted  # Specify the runner environment

    needs: build  # Ensure that the 'build' job completes successfully before starting this job
    outputs:
      full_tag: ${{ steps.build_push.outputs.full_tag }}

    steps:
      - name: Checkout code  # Checkout the repository code
        uses: actions/checkout@v4
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_UN }}
          password: ${{ secrets.DOCKERHUB_PAT }}
          
      - id: build_push
        name: Build & Push Docker image  # Build Docker image
        shell: pwsh
        run: |
          $tag = "$(& git rev-parse --short HEAD)-$(Get-Date -Format 'yyyyMMddHHmmss')"
          $full = "smehi/puck:$tag"
          Write-Output "Building $full"
          docker build -t "$full" .
          docker push "$full"
          echo "full_tag=$full" >> $env:GITHUB_OUTPUT

  deploy:
    name: kubernetes deploy
    environment:
      name: dev
    runs-on: self-hosted
    needs: docker
    
    steps:
    - name: Kubectl tool installer
      uses: Azure/setup-kubectl@v3
  
      - name: Update image to new tag
        shell: pwsh
        run: |
          kubectl set image deployment/puck-app puck=${{ needs.docker.outputs.full_tag }} --record --kubeconfig=$HOME\.kube\config\client.config
          kubectl rollout status deployment/puck-app --timeout=60s --kubeconfig=$HOME\.kube\config\client.config
      
