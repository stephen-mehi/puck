name: build and deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          cache: false

      - name: Restore dependencies
        run: dotnet restore

      - name: Build application
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --no-build --configuration Release

      - name: Build the Docker image (local only)
        shell: pwsh
        run: |
          $tag = "puck:$(& git rev-parse --short HEAD)-$(Get-Date -Format 'yyyyMMddHHmmss')"
          Write-Output $tag
          docker build -t $tag .

  docker:
    runs-on: self-hosted
    needs: build
    if: github.event_name == 'push'   # don't push images for PRs
    outputs:
      full_tag: ${{ steps.build_push.outputs.full_tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_UN }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - id: build_push
        name: Build & Push Docker image
        shell: pwsh
        run: |
          $tag = "$(& git rev-parse --short HEAD)-$(Get-Date -Format 'yyyyMMddHHmmss')"
          $full = "smehi/puck:$tag"
          Write-Output "Building $full"
          docker build -t "$full" .
          docker push "$full"
          "full_tag=$full" >> $env:GITHUB_OUTPUT

  deploy:
    name: kubernetes deploy
    environment:
      name: dev
    runs-on: self-hosted
    needs: docker
    if: github.event_name == 'push'   # don't deploy on PRs
    steps:
      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v3
        with:
          version: 'v1.30.0'  # pin a version you support

      - name: Update image to new tag
        shell: pwsh
        run: |
          $kube = "$HOME\.kube\config\client.config"
          kubectl --kubeconfig $kube set image deployment/puck-app puck=${{ needs.docker.outputs.full_tag }} --record
          kubectl --kubeconfig $kube rollout status deployment/puck-app --timeout=60s
