name: build and deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3 # Checkout the repository code
    
    - name: Setup .NET Core SDK  # Set up .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies  # Restore project dependencies
      run: dotnet restore

    - name: Build application  # Build the ASP.NET Core application
      run: dotnet build --configuration Release

    - name: Run tests  # Run tests (if applicable)
      run: dotnet test
      
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag puck:latest
  docker:
    runs-on: ubuntu-latest  # Specify the runner environment

    needs: build  # Ensure that the 'build' job completes successfully before starting this job

    steps:
      - name: Checkout code  # Checkout the repository code
        uses: actions/checkout@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_UN }}
          password: ${{ secrets.DOCKERHUB_PAT }}
          
      - name: Build Docker image  # Build Docker image
        run: docker build -t smehi/puck:latest .

      - name: Push Docker image to registry  # Push Docker image to Docker registry
        run: docker push smehi/puck:latest

  deploy:
    name: kubernetes deploy
    environment:
      name: dev
    runs-on: ubuntu-latest
    needs: docker
    
    steps:
    - name: Kubectl tool installer
      uses: Azure/setup-kubectl@v1
  
    - name: Setup kubectl
      env: 
        K8S_CONFIG: ${{ secrets.KUBERNETES_CONFIG_BASE_64 }}
      run: |
        mkdir -p $HOME/.kube
        echo "${K8S_CONFIG}" | base64 --decode > $HOME/.kube/config
      
    - name: Apply pods
      run: kubectl apply apply -f puck-deploy.yaml
      
